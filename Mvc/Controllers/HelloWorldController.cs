/* ------------------------------------------------------------------------------
<auto-generated>
    This file was generated by Sitefinity CLI v1.1.0.31
</auto-generated>
------------------------------------------------------------------------------ */

using ADA.Mvc.Models;
using DocumentFormat.OpenXml.ExtendedProperties;
using Progress.Sitefinity.Renderer.Designers.Attributes;
using Progress.Sitefinity.Renderer.Entities.Content;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Web.Mvc;
using Telerik.Sitefinity.Data;
using Telerik.Sitefinity.Modules.Libraries;
using Telerik.Sitefinity.Modules.News;
using Telerik.Sitefinity.Modules.Pages;
using Telerik.Sitefinity.Mvc;
using Telerik.Sitefinity.Mvc.Proxy;
using Telerik.Sitefinity.Pages.Model;
using Telerik.Sitefinity.Personalization;
using Telerik.Sitefinity.RelatedData;

namespace ADA.Mvc.Controllers
{
	[ControllerToolboxItem(Name = "HelloWorld", Title = "Hello World Lino", SectionName = "ADA")]
	public class HelloWorldController : Controller, IPersonalizable
	{
		// GET: HelloWorld
		public ActionResult Index()
		{
			var model = new HelloWorldModel();
			model.Message = this.Message;
			model.MyDate = this.MyDate;
			model.Number = this.Number;	
			model.Flag = this.Flag;
			model.Enum = this.Enum;


            if (this.Images != null)
            {
                var lbmanager = LibrariesManager.GetManager();
                var image = lbmanager.GetImage(Guid.Parse(this.Images.ItemIdsOrdered[0]));
                model.ImageUrl = image.MediaUrl;
            }

            if (this.MyNews != null)
            {
                var nm = NewsManager.GetManager();
                var press = nm.GetNewsItem(Guid.Parse(this.MyNews.ItemIdsOrdered[0]));
                model.PressRelease = press.Title;
            }

			return View(model);
		}
		public ActionResult Joe()
		{

			return View();
		}

		
        protected override void HandleUnknownAction(string actionName)
        {
            this.ActionInvoker.InvokeAction(this.ControllerContext, "Index");
        }

		public string Message { get; set; }
        public bool Flag { get; set; }
        public Enumeration Enum { get; set; }
		[Browsable(false)]
		public int Number { get; set; }
        public DateTime MyDate { get; set; }

		[Content(Type=KnownContentTypes.Pages)]
		public MixedContentContext Pages { get; set; }

        [Content(Type = KnownContentTypes.Images)]
        public MixedContentContext Images { get; set; }

        [Content(Type = KnownContentTypes.News)]
        public MixedContentContext MyNews { get; set; }
    }
}